name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Build and test backend
        run: |
          cd pmt-backend
          ./mvnw clean test

      - name: Build Docker image for backend
        run: |
          cd pmt-backend
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/pmt-backend:latest .

      - name: Push backend image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin
          docker push ${{ env.DOCKER_HUB_USERNAME }}/pmt-backend:latest

  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-

      - name: Install and test frontend
        run: |
          cd pmt-frontend
          npm install
          npm run test

      - name: Build Docker image for frontend
        run: |
          cd pmt-frontend
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/pmt-frontend:latest .

      - name: Push frontend image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin
          docker push ${{ env.DOCKER_HUB_USERNAME }}/pmt-frontend:latest
